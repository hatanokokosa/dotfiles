# vim:fileencoding=utf-8:foldmethod=marker

# 使用 kitty +list-fonts 命令获取所有支持的字体列表
# font_family     IosevkaTerm Nerd Font
font_family      JetBrainsMono Nerd Font
bold_font        auto
italic_font      auto
bold_italic_font auto
font_size 12.0

scrollback_lines 8000
paste_actions quote-urls-at-prompt
strip_trailing_spaces never
select_by_word_characters @-./_~?&=%+#
show_hyperlink_targets yes
remote_kitty if-needed

# 共享SSH连接
share_connections yes

# 取消左键点击打开链接（防止误点）
mouse_map left click ungrabbed no-op

# 使用Ctrl+左键点击链接或移动光标
mouse_map ctrl+left click ungrabbed mouse_handle_click selection link prompt
mouse_map ctrl+left press ungrabbed mouse_selection normal
mouse_map right press ungrabbed copy_to_clipboard

remember_window_size  yes
initial_window_width  640
initial_window_height 400

# 窗口布局类型：
# fat -- 一个（或多个）窗口在顶部全宽显示，其余窗口在底部并排显示
# grid -- 所有窗口以网格形式显示
# horizontal -- 所有窗口并排显示
# splits -- 窗口按任意模式排列，可使用水平和垂直分割创建
# stack -- 一次只显示一个最大化的窗口
# tall -- 一个（或多个）窗口在左侧全高显示，其余窗口在右侧上下排列
# vertical -- 所有窗口上下排列
enabled_layouts splits,stack

# 包含分割窗口的配置
include splits.conf
window_resize_step_cells 2
window_resize_step_lines 2
window_border_width 0.5pt
visual_window_select_characters 1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ

# 使用负值时，处于shell提示符的窗口不计算在内，只计算正在运行命令的窗口
confirm_os_window_close -1
tab_bar_style powerline

# 标签栏标题模板
tab_title_template "{fmt.fg.red}{bell_symbol}{activity_symbol}{fmt.fg.tab}{index}:{'\U0001f1ff' if layout_name == 'stack' and num_windows > 1 else ''}{title}"

# 背景设置
background_opacity 1
#background_opacity 0.90
background_image none
background_image_layout tiled
background_image_linear no
dynamic_background_opacity yes
#background_blur 30

# 允许远程控制
allow_remote_control yes

# 启动会话配置
startup_session session.conf
allow_hyperlinks yes

# 启用shell集成
shell_integration enabled
term xterm-256color
kitty_mod ctrl+shift

# 禁用意外创建窗口的快捷键
map kitty_mod+enter no-op
map cmd+enter       no-op

# 窗口管理快捷键
map ctrl+a>x close_window
map ctrl+a>] next_window
map ctrl+a>[ previous_window
map ctrl+a>period move_window_forward
map ctrl+a>comma move_window_backward
map kitty_mod+t launch --location=hsplit

# tmux风格的标签创建，使用当前工作目录（需要启用shell_integration）
map ctrl+a>c launch --cwd=last_reported --type=tab
map ctrl+a>, set_tab_title

# 增大字体大小
map ctrl+equal  change_font_size all +2.0
map ctrl+plus   change_font_size all +2.0
map ctrl+kp_add change_font_size all +2.0

# 减小字体大小
map ctrl+minus       change_font_size all -2.0
map ctrl+kp_subtract change_font_size all -2.0

# 重置字体大小
map ctrl+0 change_font_size all 0

# 全屏切换
map f11 toggle_fullscreen
map ctrl+a>e no-op
map ctrl+a>shift+e launch --type=tab nvim ~/.config/kitty/kitty.conf

# 重新加载kitty配置
map ctrl+a>shift+r combine : load_config_file : launch --type=overlay sh -c 'echo "kitty config reloaded."; echo; read -r -p "Press Enter to exit"; echo ""'

# 调试kitty配置
map ctrl+a>shift+d     debug_config

# 主题配置
# BEGIN_KITTY_THEME
# Catppuccin-Frappe
include current-theme.conf
# END_KITTY_THEME

# 提示工具的字母表设置
map ctrl+a>space kitten hints --alphabet asdfqwerzxcvjklmiuopghtybn1234567890 --customize-processing custom-hints.py
map f3 kitten hints --program '*'

# 映射双击ctrl+a为ctrl+a（回到行首）
map ctrl+a>ctrl+a send_text all \x01

# 其他设置
enable_audio_bell no
cursor_shape block
cursor_blink_interval 0
sync_to_monitor yes
cursor_trail 1
window_padding_width 5
